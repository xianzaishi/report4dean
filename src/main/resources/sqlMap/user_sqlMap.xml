<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="user">
<insert id="addUser" parameterClass="com.zhl.business.model.User">
	insert into user
	<dynamic prepend="set">  
		<isNotNull prepend="," property="userName">            
		     user_name = #userName#  
		</isNotNull>  
		<isNotNull prepend="," property="realName">            
		     real_name = #realName#  
		</isNotNull>  
		<isNotNull prepend="," property="password">            
		     password = #password#  
		</isNotNull>  
		<isNotNull prepend="," property="personId">            
		     person_id = #personId#  
		</isNotNull>
		<isNotNull prepend="," property="mobile">            
		     mobile = #mobile#  
		</isNotNull>
		<isNotNull prepend="," property="email">            
		     email = #email#  
		</isNotNull>
		<isNotNull prepend="," property="createDate">            
		     create_date = #createDate#  
		</isNotNull>
	</dynamic>  
</insert>
<select id="queryUser" resultClass="com.zhl.business.model.User">
	select id as id,
		user_name as userName,
		real_name as realName,
		sex as sex,
		birthday as birthday,
		password as password,
		community_id as communityId,
		person_id as personId,
		mobile as mobile,
		email as email,
		head_pic_id as headPicId,
		create_date as createDate
	from user
	order by id asc
</select>
<select id="queryUserByName" parameterClass="java.lang.String" resultClass="com.zhl.business.model.User">
	select id as id,
		user_name as userName,
		password as password,
		real_name as realName,
		sex as sex,
		birthday as birthday,
		community_id as communityId,
		person_id as personId,
		mobile as mobile,
		email as email,
		head_pic_id as headPicId,
		create_date as createDate
	from user
	where user_name = #userName#
</select>
<select id="queryUserListByName" parameterClass="java.lang.String" resultClass="com.zhl.business.model.User">
	select id as id,
		user_name as userName,
		real_name as realName,
		sex as sex,
		birthday as birthday,
		password as password,
		community_id as communityId,
		person_id as personId,
		mobile as mobile,
		email as email,
		head_pic_id as headPicId,
		create_date as createDate
	from user
	where user_name = #userName#
</select>
<select id="queryUserDto" resultClass="com.zhl.business.dto.UserDto">
	select u.id as id,
		u.user_name as userName,
		u.real_name as realName,
		u.sex as sex,
		u.birthday as birthday,
		u.password as password,
		c.name as community,
		u.person_id as personId,
		u.mobile as mobile,
		u.email as email,
		u.head_pic_id as headPicId,
		u.create_date as createDate,
		ur.role_id as roleId,
		r.model_name as modelName
	from user u
	left join community c on c.id = u.community_id
	left join user_role ur on ur.user_id = u.id
	left join role r on r.id = role_id
	order by id asc
</select>
<select id="queryCountOfUser" resultClass="java.lang.Integer">
	select count(*) from user
</select>
<select id="queryUserDtoById" parameterClass="java.lang.Integer" resultClass="com.zhl.business.dto.UserDto">
	select u.id as id,
		u.user_name as userName,
		u.real_name as realName,
		u.sex as sex,
		u.birthday as birthday,
		u.password as password,
		c.name as community,
		u.person_id as personId,
		u.mobile as mobile,
		u.email as email,
		u.head_pic_id as headPicId,
		u.create_date as createDate,
		ur.role_id as roleId,
		r.model_name as modelName
	from user u
	left join community c on c.id = u.community_id
	left join user_role ur on ur.user_id = u.id
	left join role r on r.id = role_id
	where u.id = #id:INTEGER#
</select>
<select id="queryUserById" parameterClass="java.lang.Integer" resultClass="com.zhl.business.model.User">
	select id as id,
		user_name as userName,
		real_name as realName,
		sex as sex,
		birthday as birthday,
		password as password,
		community_id as communityId,
		person_id as personId,
		mobile as mobile,
		email as email,
		head_pic_id as headPicId,
		create_date as createDate
	from user
	where id = #id:INTEGER#
</select>
<update id="editUserById" parameterClass="com.zhl.business.model.User">
	update user
   	<dynamic prepend="set">
       <isNotNull prepend="," property="userName">
            user_name = #userName#
        </isNotNull>
       <isNotNull prepend="," property="realName">
            real_name = #realName#
        </isNotNull>
       <isNotNull prepend="," property="sex">
            sex = #sex#
        </isNotNull>
       <isNotNull prepend="," property="birthday">
            birthday = #birthday#
        </isNotNull>
       <isNotNull prepend="," property="password">
            password = #password#
        </isNotNull>
       <isNotNull prepend="," property="communityId">
            community_id = #communityId#
        </isNotNull>
       <isNotNull prepend="," property="personId">
            person_id = #personId#
        </isNotNull>
       <isNotNull prepend="," property="mobile">
            mobile = #mobile#
        </isNotNull>
       <isNotNull prepend="," property="email">
            email = #email#
        </isNotNull>
       <isNotNull prepend="," property="headPicId">
            head_pic_id = #headPicId#
        </isNotNull>
   	</dynamic>
  	where id=#id:INTEGER#
</update>
<insert id="addHeadPic" parameterClass="com.zhl.business.model.HeadPic" >
	insert into head_pic (path) values (#path#)
	<selectKey resultClass="java.lang.Integer" keyProperty="id">
		select last_insert_id() as id from head_pic limit 1
	</selectKey>
</insert>
<select id="queryHeadPicById" parameterClass="java.lang.Integer" resultClass="java.lang.String">
	select path from head_pic
	where id = #id:INTEGER#
</select>
<delete id="deleteUserRoleByUserId" parameterClass="java.lang.Integer">
	delete from user_role
	where user_id = #userId:INTEGER#
</delete>
<insert id="addUserRole" parameterClass="java.util.Map">
	insert into user_role (user_id, role_id) values(#userId#, #roleId#)
</insert>
<delete id="deleteUserById" parameterClass="java.lang.Integer">
	delete from user
	where id = #id:INTEGER#
</delete>
<select id="queryRoleByUserId" parameterClass="java.lang.Integer" resultClass="com.zhl.business.model.Role">
	select r.id as id,
		r.name as name,
		r.model_name as modelName,
		r.read_level as readLevel
	from role r
	left join user_role ur on ur.role_Id = r.id
	where ur.user_id = #id:INTEGER#
</select>
</sqlMap>



